<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!--css를 사용하기위해 만든다.  -->
	<resources mapping="/css/**" location="/css/" />
	
	<!-- 사진에서 업로드파일을 사용하기위해 -->
	<resources mapping="/uploadfile/**" location="/uploadfile/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 파일업로드 처리를 위한 multipartResolver bean 등록 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding">
			<beans:value>utf-8</beans:value>
		</beans:property>
	</beans:bean>
	
	<!--인터셉터를 이용해 로그인이 되어있지 않으면 인터셉터 페이지로 이동  -->
	<interceptors>
		<interceptor>
			<mapping path="/member/**"/>
			<exclude-mapping path="/member/login"/>
			<exclude-mapping path="/member/logout"/>
			<exclude-mapping path="/member/memberReg"/>
			<beans:bean class = "com.bitcamp.op.interceptor.AuthCheckInterceptor"/>
		</interceptor>
	</interceptors>
	
	<context:component-scan base-package="com.bitcamp.op" />
	
	<!-- memberDao 등록 -->
	<beans:bean id = "memberDao" class = "com.bitcamp.op.member.dao.MemberDao"/>
	
	<!-- 서비스 등록 -->
	<beans:bean id = "memberRegService" class = "com.bitcamp.op.member.service.MemberRegService"/>
	<beans:bean id = "memberLoginService" class = "com.bitcamp.op.member.service.MemberLoginService"/>
	<beans:bean id = "memberListService" class = "com.bitcamp.op.member.service.MemberListService"/>
</beans:beans>
